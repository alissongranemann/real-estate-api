version: 2.1
orbs:
  heroku: circleci/heroku@0.0.8

workflows:
  build-and-deploy:
    jobs:
      - build
      - stage-deploy:
          requires:
            - build
          filters:
            branches:
             only: stage
      - prod-deploy:
          requires:
            - build 
          filters:
            branches:
             only: master
jobs:
  build:
    docker:
      - image: circleci/python:3.7.4
        environment:
          DATABASE_URL: postgres://postgres@localhost:5432/real_state_test
      - image: mdillon/postgis:11-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: real_state_test
    steps:
      - checkout
      - restore_cache:
          keys: 
            - deps-{{ .Branch }}-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - deps-
      - run:
          name: install dependencies
          command: |
            poetry install
      - save_cache:
          key: deps-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths: 
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: Run black
          command: |
            poetry run black .
      - run:
          name: Run flake8
          command: |
            poetry run flake8 .
      - run:
          name: Run the Tests
          command: |
            poetry run python -m pytest --junitxml=test-reports/output.xml
      - store_artifacts:
          path: test-reports/
      - store_test_results:
          path: test-reports/

  stage-deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/deploy-via-git:
          app-name: "real-state-api-stage"
          only-branch: stage

  prod-deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/deploy-via-git:
          app-name: "real-state-api"
          only-branch: master
