version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - restore_cache:
          keys: 
            - deps-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      - run:
          name: install dependencies
          command: |
            poetry install
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths: 
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: Run black
          command: |
            poetry run black .
      - run:
          name: Run flake8
          command: |
            poetry run flake8 .
    #   - run:
    #       name: run tests
    #       command: |
    #         . venv/bin/activate
    #         python manage.py test
    #   - store_artifacts:
    #       path: test-reports
    #       destination: test-reports

  stage-deploy:
    docker:
      - image: buildpack-deps:stretch
    environment:
        HEROKU_APP_NAME: "real-state-api-stage"
    steps:
      - checkout
      - run:
          name: Deploy Stage to Heroku
          command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

  prod-deploy:
    docker:
      - image: buildpack-deps:stretch
    environment:
        HEROKU_APP_NAME: "real-state-api"
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - stage-deploy:
          requires:
            - build
          filters:
            branches:
              only: stage
      - prod-deploy:
          requires:
            - build
          filters:
            branches:
              only: master
